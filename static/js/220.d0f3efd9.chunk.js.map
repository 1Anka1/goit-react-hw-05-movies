{"version":3,"file":"static/js/220.d0f3efd9.chunk.js","mappings":"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","sources":["components/Api/api.jsx","webpack://react-homework-template/./src/components/shared/Loader/Loader.module.scss?2197","components/shared/Loader/Loader.jsx","webpack://react-homework-template/./src/pages/MovieInfoPage/MovieInfoPage.module.scss?2efa","pages/MovieInfoPage/MovieInfoPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '0ce765f590cdfc1a886df1afd7d175f9';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const searchTrendDayMovie = async () => {\n  const response = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n  return await response.data;\n};\n\nexport const searchMovieById = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return await response.data;\n};\n\nexport const searchMovieCast = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return await response.data;\n};\n\nexport const searchMovieReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return await response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return await response.data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Loader_backdrop__zdXf0\",\"loader\":\"Loader_loader__hDDB3\"};","import React from 'react'\nimport css from '../Loader/Loader.module.scss';\n\nexport default function Loader() {\n  return (\n    <div className={css.backdrop}>\n        <div className={css.loader}></div>\n    </div>\n  )\n}","// extracted by mini-css-extract-plugin\nexport default {\"buttonBack\":\"MovieInfoPage_buttonBack__Xd8Ef\",\"movieWrapper\":\"MovieInfoPage_movieWrapper__WivU4\",\"movieAdditionalWrapper\":\"MovieInfoPage_movieAdditionalWrapper__qFJHT\",\"movieImgThumb\":\"MovieInfoPage_movieImgThumb__kWaUY\",\"movieImg\":\"MovieInfoPage_movieImg__OtSff\",\"movieInfo\":\"MovieInfoPage_movieInfo__YgHgp\",\"movieTitle\":\"MovieInfoPage_movieTitle__zqYzr\",\"movieInfoList\":\"MovieInfoPage_movieInfoList__i1rYT\",\"movieAdditionalInfoList\":\"MovieInfoPage_movieAdditionalInfoList__IHcF-\",\"movieInfoItem\":\"MovieInfoPage_movieInfoItem__goQIA\",\"movieInfoDetail\":\"MovieInfoPage_movieInfoDetail__frQyv\",\"movieInfoWrapper\":\"MovieInfoPage_movieInfoWrapper__dXriN\",\"movieGenre\":\"MovieInfoPage_movieGenre__LTvIm\",\"movieInfoAbout\":\"MovieInfoPage_movieInfoAbout__5N3Pd\",\"link\":\"MovieInfoPage_link__mRGQ4\"};","import { searchMovieById } from \"components/Api/api\"\nimport Loader  from \"components/shared/Loader/Loader\"\nimport { useEffect, useState } from \"react\"\nimport { useParams, useNavigate, Outlet, NavLink, useLocation } from \"react-router-dom\"\nimport css from './MovieInfoPage.module.scss'\n\nexport default function MovieInfoPage() {\n    const [movie, setMovie] = useState('')\n    const [loading, setLoading] = useState(false)\n    const[error, setError] = useState(null)\n\n    const {id} = useParams()\n    const navigate = useNavigate()\n\n    const getClassName = ({ isActive }) => {\n        return isActive ? `${css.link} ${css.active}` : `${css.link}`;\n      };\n\n    const location = useLocation()\n    const from = location.state?.from || \"/\"\n    const goBack = () => navigate(from)\n\n\n    const castLink = location.pathname.includes(\"cast\") ? `/movies/${id}` : `/movies/${id}/cast`\n    const reviewsLink = location.pathname.includes(\"reviews\") ? `/movies/${id}` : `/movies/${id}/reviews`\n\n    const imagePath = movie.poster_path ? `https://image.tmdb.org/t/p/w500${movie.poster_path}` : 'https://w7.pngwing.com/pngs/772/172/png-transparent-film-cinema-television-android.png';\n    const releaseDate = movie.release_date ? movie.release_date?.split('-')[0] : 'No data';\n\n    useEffect(() => {\n        const fetchMovie = async ()=> {          \n            try{\n                setLoading(true)\n                const data = await searchMovieById(id);\n                setMovie(data)\n\n            } catch (error) {\n                setError(error)\n            } finally {\n                setLoading(false)\n            }         \n        }\n\n        fetchMovie()\n\n    },[id])\n\n const { name, title, vote_average, overview} = movie;\n    return (\n      <section className={css.movieSection}>\n        <button className={css.buttonBack} type=\"button\" onClick={goBack}>\n          Back\n        </button>\n        {loading && <Loader />}\n        {error && (\n          <div className={css.movieImgThumb}>\n            <h4>The resource you requested could not be found.</h4>\n            <img\n              src={\n                'https://www.ra.bm/wp-content/themes/consultix/images/no-image-found-360x250.png'\n              }\n              alt=\"\"\n              className={css.movieImg}\n            />\n          </div>\n        )}\n\n        {movie && (\n          <>\n            <div className={css.movieWrapper}>\n              <div className={css.movieImgThumb}>\n                <img src={imagePath} alt={name} className={css.movieImg} />\n              </div>\n\n              <div className={css.movieInfo}>\n                <h2 className={css.movieTitle}>\n                  {title || name} ({releaseDate})\n                </h2>\n                <ul className={css.movieInfoList}>\n                  <li className={css.movieInfoItem}>\n                    User score:{' '}\n                    <span className={css.movieInfoDetail}>\n                      {Math.round(vote_average * 10)}%\n                    </span>\n                  </li>\n                </ul>\n                <div className={css.movieInfoWrapper}>\n                  <h4>Overview</h4>\n                  <p className={css.movieInfoAbout}>{overview}</p>\n                </div>\n\n                <div className={css.movieInfoWrapper}>\n                  <h4>Genres</h4>\n                  <p className={css.movieInfoAbout}>\n                    {movie.genres.map(({ name, id }) => (\n                      <span className={css.movieGenre} key={id}>\n                        {name}\n                      </span>\n                    ))}\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            <div className={css.movieAdditionalWrapper}>\n              <h4>Additional information</h4>\n              <ul className={css.movieAdditionalInfoList}>\n                <li>\n                  <NavLink\n                    state={{ from }}\n                    to={castLink}\n                    className={getClassName}\n                  >\n                    Cast\n                  </NavLink>\n                </li>\n                <li>\n                  <NavLink\n                    state={{ from }}\n                    to={reviewsLink}\n                    className={getClassName}\n                  >\n                    Reviews\n                  </NavLink>\n                </li>\n              </ul>\n              <Outlet />\n            </div>\n          </>\n        )}\n      </section>\n    );\n}\n"],"names":["API_KEY","axios","searchTrendDayMovie","response","data","searchMovieById","id","searchMovieCast","searchMovieReviews","searchMovies","query","Loader","className","css","MovieInfoPage","useState","movie","setMovie","loading","setLoading","error","setError","useParams","navigate","useNavigate","getClassName","isActive","location","useLocation","from","state","castLink","pathname","includes","reviewsLink","imagePath","poster_path","releaseDate","release_date","split","useEffect","fetchMovie","name","title","vote_average","overview","type","onClick","src","alt","Math","round","genres","map","to"],"sourceRoot":""}